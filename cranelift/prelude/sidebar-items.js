initSidebarItems({"enum":[["ExternalName","The name of an external is either a reference to a user-defined symbol table, or a short sequence of ascii bytes so that test cases do not have to keep track of a symbol table."],["FloatCC","Condition code for comparing floating point numbers."],["GlobalValueData","Information about a global value declaration."],["IntCC","Condition code for comparing integers."],["StackSlotKind","The kind of a stack slot."],["TrapCode","A trap code describing the reason for a trap."]],"mod":[["isa","Instruction Set Architectures."],["settings","Shared settings module."],["types","Common types for the Cranelift code generator."]],"struct":[["AbiParam","Function parameter or return value descriptor."],["Ebb","An opaque reference to an extended basic block in a function."],["ExtFuncData","An external function."],["FunctionBuilder","Temporary object used to build a single Cranelift IR `Function`."],["FunctionBuilderContext","Structure used for translating a series of functions into Cranelift IR."],["Ieee32","An IEEE binary32 immediate floating point value, represented as a u32 containing the bit pattern."],["Ieee64","An IEEE binary64 immediate floating point value, represented as a u64 containing the bit pattern."],["Imm64","64-bit immediate signed integer operand."],["JumpTableData","Contents of a jump table."],["MemFlags","Flags for memory operations like load/store."],["Signature","Function signature."],["StackSlotData","Contents of a stack slot."],["Type","The type of an SSA value."],["Uimm64","64-bit immediate unsigned integer operand."],["Value","An opaque reference to an SSA value."],["Variable","An opaque reference to a variable."]],"trait":[["Configurable","A string-based configurator for settings groups."],["EntityRef","A type wrapping a small integer index should implement `EntityRef` so it can be used as the key of an `SecondaryMap` or `SparseMap`."],["InstBuilder","Convenience methods for building instructions."]]});